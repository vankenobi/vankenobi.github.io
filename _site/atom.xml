<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Vankenobi</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <link href="http://localhost:4000/"/>
 <updated>2021-07-03T22:04:13+03:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name></name>
   <email></email>
 </author>

 
 <entry>
   <title>Esp8266 Low Power Door Sensor With HomeAssistant Integration (EN)</title>
   <link href="http://localhost:4000/2021/07/04/esp8266-low-power-door-sensor-with-homeassistant-integration-en"/>
   <updated>2021-07-04T00:50:00+03:00</updated>
   <id>http://localhost:4000/2021/07/04/Esp8266-Low-Power-Door-Sensor-With-HomeAssistant-Integration(EN)</id>
   <content type="html">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=12pLLNftPSHT9aJkCZGEXDJivoaW0hkL8&quot; alt=&quot;photo&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;about-this-project&quot;&gt;About This Project&lt;/h3&gt;

&lt;p&gt;Hi everyone, this project is door sensor project consuming low power and running long time. &lt;br /&gt;
I integrated this sensor to my homeassistant home system. Sensor communication is wifi and using mqtt protocol. Sensor is working when magnet leave  then connecting to mqtt broker  finally it is sending  current battery status and  “Open” text.
Let’s talk about requirements for this project and then project making if you want.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;what-is-homeassistant-&quot;&gt;What is HomeAssistant ?&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=14BbUkBHtHntvVoomfbj64dP78iPQQ2n_&quot; alt=&quot;photo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Home assistant is Home Automation Hub. Or Home Automation Software to be more precise. It’s free and open source and fully local alternative to things like HomeBridge and SmartThings. It gives you the power of home automation without the cloud so you won’t depend on internet connection or remote servers. This results in faster operation and reliability. You can visit &lt;a href=&quot;https://en.wikipedia.org/wiki/Home_Assistant&quot; target=&quot;_blank&quot;&gt;this&lt;/a&gt; website if you think need more information.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;starting-to-project&quot;&gt;Starting To Project&lt;/h3&gt;

&lt;p&gt;First one we should print the 3d parts of this project. You should access from &lt;a href=&quot;https://www.thingiverse.com/thing:4899894&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;  the 3d parts of this project if you wondered. By the way at website where i put 3d parts is people is sharing own 3d designs. This website called “Thingiverse” is very useful site for who searching different things and different design. You can find below settings of cura slicer program for this 3d parts.&lt;/p&gt;

&lt;h4 id=&quot;cura-and-print-settings&quot;&gt;Cura And Print Settings&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;0,3mm layer thickness (resolution)&lt;/li&gt;
  &lt;li&gt;No Rafts&lt;/li&gt;
  &lt;li&gt;No support&lt;/li&gt;
  &lt;li&gt;%25 infill&lt;/li&gt;
  &lt;li&gt;Filament Material (PLA)&lt;/li&gt;
  &lt;li&gt;My 3D printer is Ender 3 Pro but you can use any 3d printer brand&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;requirements-of-this-project&quot;&gt;Requirements Of This Project&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=13Q2l1tuU9ixBerHXvIdYtLBbRp1cX0dx&quot; alt=&quot;photo&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1 pcs Esp8266-01&lt;/li&gt;
  &lt;li&gt;1 pcs Reed Switch (Normally Open)&lt;/li&gt;
  &lt;li&gt;2 pcs 2 Pin 2.50mm DIP Pcb Type Header Straight (one female one male)&lt;/li&gt;
  &lt;li&gt;3 pcs M3 6mm screw&lt;/li&gt;
  &lt;li&gt;8 pcs female jumper header (for esp8266 assembly)&lt;/li&gt;
  &lt;li&gt;2 pcs 1 Kohm resistors&lt;/li&gt;
  &lt;li&gt;1 pcs 220 ohm resistor&lt;/li&gt;
  &lt;li&gt;1 pcs pertinax&lt;/li&gt;
  &lt;li&gt;2 pcs magnet (6,5mm * 11,7mm * 8mm)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;step-1-creating-the-circuit-and-soldering-the-components&quot;&gt;Step 1 (Creating the circuit and soldering the components)&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=13wdfkZ2sbM2Q-12x4iJgmFK3kq0KoNYF&quot; alt=&quot;photo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We will combine the above supplied all parts. I combined the all parts on breadboard for try to circuit and i combined the all parts on pertinax after be success. As result it happened a compact thing like  above photo.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;step-2-how-is-work-this-sensor-&quot;&gt;Step 2 (How is work this sensor ?)&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1n9hwCUQuWT8c5ZpsxoqSRAOcgD4VrFMe&quot; alt=&quot;photo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This sensor take power from two pcs AA battery. Reed switch closed when magnet leave and then NPN transistor connect gnd pin to reset pin of esp8266. So esp8266 reboots. Esp8266 is going deep sleep after all process is done. Until it wake up again. It is a simple circuit to understand. &lt;strong&gt;I forgot to pull gpio 0 pin to vcc while design it on fritzing. You can pull gpio 0 to vcc pin with 10k resistor.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;step-3-how-is-install-mqtt-extension-on-homeassistant-&quot;&gt;Step 3 (How is install mqtt extension on homeassistant ?)&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1tznZQgyxmWzyA9dfksSVu8CUMgj10gy2&quot; alt=&quot;photo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I won’t long describe the this point but i have watch very good video about the this step. This video is helpful about installing mqtt on Homeassistant. You should watch &lt;a href=&quot;https://www.youtube.com/watch?v=dqTn-Gk4Qeo&quot; target=&quot;_blank&quot;&gt;this&lt;/a&gt; video if you want success for this step.&lt;/p&gt;

&lt;p&gt;Below i gave configuration lines for this sensor the configuration.yaml from my homeassistant.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Door sensor state configuration&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Door sensor battery state configuration&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1lx3viJ77UnNVECp2HlUZLMu7glCfJQgS&quot; alt=&quot;Battery Status&quot; /&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1ktZwaCo9NGzRPtDDHHgpxqqH7WiX8JiU&quot; alt=&quot;Status&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;I want say about above sensor configurations. “off_delay” refers to the time taken by the sensor after the “Open” signal is sent, until the “Close” signal is sent. Battery value percent is calculating with esp8266 and then it is sending  to broker as json format. AA battery is generally kill at 2.8 voltage value so “map” method  is  bottom value 2.8 and upper value 3,2 voltage. If you wonder the map method you can acces &lt;a href=&quot;https://www.arduino.cc/reference/en/language/functions/math/map/&quot; target=&quot;_blank&quot;&gt;this&lt;/a&gt; link.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;advantage-of-this-sensor&quot;&gt;Advantage of this sensor&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Sensor power consumption is ultra low (during DeepSleep below 10 microamps)&lt;/li&gt;
  &lt;li&gt;It is so cheap (about 5$ ~ 8$)&lt;/li&gt;
  &lt;li&gt;Sensor is working so long time (about 3 years)&lt;/li&gt;
  &lt;li&gt;You can see battery status on your home panel&lt;/li&gt;
  &lt;li&gt;It is working just with 2 AA battery&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;disadvantage-of-this-sensor&quot;&gt;Disadvantage of this sensor&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Sending via wifi connection is a little bit slow (just 4 seconds)&lt;/li&gt;
  &lt;li&gt;It is sending just “Open” information when door open so not when close&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;source-code&quot;&gt;Source Code&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;
#include &amp;lt;PubSubClient.h&amp;gt; // Mqtt için gerekli kütüphane
#include &amp;lt;ESP8266WiFi.h&amp;gt;
#include &amp;lt;ArduinoJson.h&amp;gt;
#include &amp;lt;EEPROM.h&amp;gt;

ADC_MODE(ADC_VCC); // Vcc pininden analog okuma yapabilmek aktif edilir.

//USER CONFIGURED SECTION START//
const char* ssid = &quot;Your Wifi SSID&quot;; 
const char* password = &quot;Your Wifi Password&quot;;
const char* mqtt_server = &quot; Your Mqtt Server Ip Address&quot;;
const int mqtt_port = 1883; // Mqtt port number
const char *mqtt_user = &quot;Your Mqtt User Name&quot;;
const char *mqtt_pass = &quot;Your Mqtt Password&quot;;
const char *mqtt_client_name = &quot;Your Client Name&quot;; // for example: Outdoor Door Sensor
const char *mqtt_topic = &quot;Your Sensor Topic&quot;; // for example: outdoor/door_sensor
//USER CONFIGURED SECTION END//

DynamicJsonDocument doc(50);  
char buffer[50];

WiFiClient espClient;
PubSubClient client(espClient); 

//Functions

void setup_wifi()  // Wifi bağlantı fonskiyonu
{
  short int retries = 0;
  while (WiFi.status() != WL_CONNECTED &amp;amp;&amp;amp; retries &amp;lt;= 1) 
  {
    WiFi.begin(ssid, password);
    retries++;
  }
}

void reconnect()  // Mqtt sunucusuna bağlanır ve veriyi gönderir.
{
  String battery = String(map(ESP.getVcc(),2400,3125,0,100)).c_str();
  doc[&quot;battery&quot;] = battery;
  doc[&quot;status&quot;] = &quot;Open&quot;;
  serializeJson(doc,buffer);
  while(!client.connected())
  {
    delay(200);
    if(client.connect(mqtt_client_name, mqtt_user, mqtt_pass) == true)
    {
      client.publish(mqtt_topic, buffer, true);
      delay(200);
    }
  }
  ESP.deepSleep(0); // veri gönderildikten sonra modül derin uykuya geçer.
}  

void setup() {
  setup_wifi();
  client.setServer(mqtt_server, mqtt_port);
}

void loop() 
{
  reconnect();
}


&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;result&quot;&gt;Result&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=14TEsbQuAkt920GQOSgotyLrLcfacSDn9&quot; alt=&quot;photo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;video&quot;&gt;Video&lt;/h3&gt;

&lt;div class=&quot;youtube-wrapper&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube.com/embed/VyPQYQwkDsM&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Esp8266-01 + IFTTT + PIR Sensor Kullanarak Hareket Sensörü Projesi</title>
   <link href="http://localhost:4000/2021/06/01/esp8266-01-i%CC%87le-hareket-sens%C3%B6r%C3%BC-projesi"/>
   <updated>2021-06-01T14:39:00+03:00</updated>
   <id>http://localhost:4000/2021/06/01/Esp8266-01 İle Hareket Sensörü Projesi</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=11bZA4BDXUXLq8-hZP5KknDR4OOC4TX9b&quot; alt=&quot;AsenkronServer&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;proje-hakkında&quot;&gt;Proje Hakkında&lt;/h3&gt;

&lt;p&gt;Herkese merhabalar, bu blog yazısındaki projede uzun süre çalışabilen hareket algıladığında Google Tablolara (Google Sheets) kayıt tutabilen ve aynı zamanda IFTTT üzerinden mobil cihazınıza bildirim gönderebilen bir proje gerçekleştireceğim.&lt;/p&gt;

&lt;h4 id=&quot;proje-gereksinimleri&quot;&gt;Proje Gereksinimleri&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Esp8266-01&lt;/li&gt;
  &lt;li&gt;HC-SR501 PIR Sensor (Hareket Sensörü)&lt;/li&gt;
  &lt;li&gt;1 Adet Toggle Switch&lt;/li&gt;
  &lt;li&gt;Bir kaç bağlantı kablosu&lt;/li&gt;
  &lt;li&gt;2 adet AA pil&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.thingiverse.com/thing:4840469&quot; target=&quot;_blank&quot;&gt;Ürün şasisi (3d printer ile çıkacak .stl formatlı dosyalar)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;4 adet 3 mm vida&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;projede-kullanılan-bazı-kütüphane-ve-platformlar&quot;&gt;Projede Kullanılan Bazı Kütüphane Ve Platformlar&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ifttt.com/&quot; target=&quot;_blank&quot;&gt;IFTTT&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.google.com/sheets/about/&quot; target=&quot;_blank&quot;&gt;Google Sheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tzapu/WiFiManager&quot; target=&quot;_blank&quot;&gt;WifiManager Kütüphanesi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;proje-i̇çin-kullanılan-platformların-tanıtılması-ve-kurulumu&quot;&gt;Proje İçin Kullanılan Platformların Tanıtılması Ve Kurulumu&lt;/h3&gt;

&lt;h4 id=&quot;ifttt-nedir-&quot;&gt;IFTTT Nedir ?&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?id=1NgsrsokYAW9vGFxjRrjeGAEee_HoS7J8&quot; alt=&quot;Tittle-Photo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;IFTTT “If This, Then That” anlamına gelir. IFTTT hem bir websitesidir hem de bir mobil uygulamaya sahiptir. Platformun sağladığı şey uygulamaları birbirine bağlamak. Kısacası servislerin ve cihazların birbirleri ile konuşması diyebiliriz. Örneğin android telefonunuzda bir arama yaparsanız, o aramanın günlüğü bir Google e-tablosuna eklenir. Bunu IFTTT size sağlar. Veya evde telefonunuzu kaybettiğiniz zaman google home mini cihazınıza “Benim telefonum nerede ?” sorusunu iletirseniz telefonunuzu çaldıracaktır. Bir başka örnek ise toplantı saatiniz geldiğinde philips hue ampüllerinizi yeşil renkte yakabilirsiniz. Bu ve bunun gibi senaryoları IFTTT ile yapmanız mümkün. 
Bu projede IFTTT aracılığı ile aşağıdaki olaylar gerçekleştirilecek;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Hareket sensörü eğer bir hareket algıladıysa bu hareketin zamanını ve “Hareket Algılandı !” yazısını Google Tablolara (Google Sheets) kayıt etmesini gerçekleştireceğiz.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;IFTTT notification applet’i aracılığı ile IFTTT kurulu olan mobil cihazınıza hareketin algılandığını bildirim olarak göndereceğiz.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;google-tablolar-google-sheets-nedir-&quot;&gt;Google Tablolar (Google Sheets) Nedir ?&lt;/h4&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?id=1pYliib1K-MKSHgHeTYScSi4_-xigr6C0&quot; alt=&quot;Tittle-Photo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Google E-Tablolar, e-tablolar oluşturmak ve düzenlemek için kullanılan, ücretsiz web üzerinden kontrol edilebilen bir programdır. Google E-Tablolar, Google Dokümanlar ve Google Slaytlarla beraber Google’ın Drive içerisinde bir parçası olarak gösterilebilir. Microsoft’un Office programlarına benzer bir yapıdadır. Microsoft Office uygulamalarına göre sistemin artıları var. Uzaktan birden fazla sayıda cihazla kontrol, grup olarak çalışma gibi artılarla beraber Google tabloların bunların dışında birden fazla avantajlı özelliği vardır.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;wifi-manager-kütüphanesi-nedir-&quot;&gt;Wifi Manager Kütüphanesi Nedir ?&lt;/h4&gt;

&lt;p&gt;WifiManager bir wifi yönetim kütüphanesidir. Bu kütüphane esp8266-01 kartının bağlanması gereken wifi ağını kod içerisinde tanımlamak yerine cihazın kullanıcıya sunmuş olduğu web sayfası sayesinde dışarıdan girme özelliği sunuyor. WifiManager kütüphanesinin çalışma şeklinin akış diyagramı aşağıda görülmektedir.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?id=1v6B51nMlziV2WTL1qvUUdXD2kVETkwVE&quot; alt=&quot;Tittle-Photo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;deep-sleep-nedir-&quot;&gt;Deep Sleep Nedir ?&lt;/h3&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?id=1pqeKRWUHagcQ5pqNvR3e9bse5vjrpPHq&quot; alt=&quot;Tittle-Photo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pil ile çalışan bir esp8266 ile proje yaptıysanız veya nodeMCU kartınızı bir güç bankasına bağladıysanız bir süre sonra, özellikle projede wifi kullanıyorsanız pilin uzun sürmediğini fark edeceksiniz. Özellikle Iot cihazlarda ve mobil çalışan cihazlarda bu durum büyük problemdir. Ancak DeepSleep buna büyük anlamda çözüm getirir. Wifi bağlantısı cihazın daha fazla akım çekmesine sebep olur. Bu nedenle pilin enerjisini hızlıca tüketmesi kaçınılmazdır. Bu durum Deep Sleep sayesinde kolayca ve büyük bir oranla aşılabilir. DeepSleep mikroişlemci tarafında bir özelliktir.&lt;/p&gt;

&lt;p&gt;Varsayalım bir hava istasyonu projesi yaptınız. Dht11 sıcaklık ve nem sensöründen gelen verileri esp8266 kartı aracılığı ile internete çıkarıyorsunuz ve her saat başı bu işlemi yaptırıyorsunuz. Varsayalım her bir işlem sadece 5 saniyede kendini tamamlasın. Cihaz bir gün içerisinde sadece 24 kez bu işlemi gerçekleştirecek ve toplamda 120 saniye yani 2 dakika çalışacak. Bir günde 24*60 = 1440 dakika var. 
 1440 - 24 = 1416 dakika cihaz boşuna çalışmış olacak. Burada DeepSleep imdadımıza yetişiyor. DeepSleep sayesinde cihaz görevi bittikten sonra derin uykuya geçerek işlemciyi kapatıyor ve bir sonraki göreve gelene kadar uyanmıyor.&lt;/p&gt;

&lt;p&gt;Burada esp8266 modülünü uyandırmak için &lt;a href=&quot;https://en.wikipedia.org/wiki/Real-time_clock&quot; target=&quot;_blank&quot;&gt;RTC&lt;/a&gt; kullanılabileceği gibi modül üzerinde bulunan enable pinine 3v kare sinyal gönderilerek de uyandırılabilir.&lt;/p&gt;

&lt;p&gt;Bu projede cihazı uyandıran etken hareket sensöründen esp8266 üzerindeki enable pinine gelen ve yaklaşık olarak 20 saniye süren 3v kare sinyaldir.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?id=1Hab03AvicGZn5WiPFKJaqE8WajHTMnSq&quot; alt=&quot;Tittle-Photo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Yukarıdaki tabloda görüldüğü gibi deepsleep modunda modül RTC hariç diğer her şeyi (Wifi,System Clock, CPU) kapatarak yaklaşık 20 mikroamperlik çekilen akım miktarına ulaşıyor. Tabloda bu modül için 3 farklı sleep modu bulunmaktadır. Bunlardan en az güç tüketen sleep modu deepsleep’dir.&lt;/p&gt;

&lt;h2 id=&quot;projenin-ifttt-kurulumu&quot;&gt;Projenin IFTTT Kurulumu&lt;/h2&gt;
&lt;p&gt;Bu kısımda proje için gerekli IFTTT ayaralarının kurulumu anlatılmaktadır.&lt;/p&gt;
&lt;h4 id=&quot;ifttt-google-tablolar-bağlantısı&quot;&gt;IFTTT Google Tablolar Bağlantısı&lt;/h4&gt;

&lt;p&gt;IFTTT web sitesine &lt;a href=&quot;https://ifttt.com/&quot;&gt;buradan&lt;/a&gt; ulaşabilirsiniz. Siteye google hesabınızla kayıt olup giriş yaptıktan sonra sırasıyla aşağıdaki adımları izleyerek google tablolara bağlanarak hareket algılandığında tabloya kayıt yaptırabiliriz.&lt;/p&gt;

&lt;p&gt;Ana sayfada “create” butonuna bastıktan ve if kutucuğu içerisindeki “add” butonuna bastıktan sonra servisler içerisinden webhook servisini seçiyoruz.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;İlk olarak IFTTT sitesinde ana sayfada iken sağ üst köşedeki “Create” butonuna tıklıyoruz.&lt;/strong&gt;
&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1iLJ4JJd7-m1fLEu8Y1wJM15RXsZlJXZF&quot; alt=&quot;IFTTT Create&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gelen sayfada if kutucuğu içerisindeki “add” butonuna tıklıyoruz.&lt;/strong&gt;
&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1B8G0RTALe21FgpL3oJmEuasAai2cAXGc&quot; alt=&quot;IFTTT IF THIS THAN THAT&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;event name kısmına Iot_Motion_Sensor yazıyorum bu benim yazdığım programın bir gereği siz başka bir şey yazabilirsiniz ancak az sonra göstereceğim link içerisinde bunu belirtmeniz gerekir. create trigger butonuna tıkladıktan sonra then kutucuğunun içerisindeki add butonuna tıklıyoruz ve tekrardan yeni bir servis arıyoruz.&lt;/strong&gt;
&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=18sMi6XtDlcHowGZ0iyk4smMEw91zyjsN&quot; alt=&quot;google asistant ayarlar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Google sheets servisini arıyoruz ve seçiyoruz.&lt;/strong&gt;
&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1jHGeHfhtW_ecD_TgvVwF99dPzqlFIO0C&quot; alt=&quot;google asistant ayarlar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Daha sonra add row to spreadsheet seçeneğine tıklıyoruz. Bunu seçmemizin sebebi tabloya her yeni bir bilgi geldiğinde yeni bir satıra ekleniyor olmasıdır.&lt;/strong&gt;
&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1CnbDMIM9bwLpFpeo8HDDd8WhYBOnJyEa&quot; alt=&quot;google asistant ayarlar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ayarlar aşağıdaki gibi olmalıdır eğer isterseniz tablo adını değiştirebilirsiniz.&lt;/strong&gt;
&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1HWE3MFWzSjnRSMarpMJIO2zsxnvD8CME&quot; alt=&quot;google asistant ayarlar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Triggerdan önceki eğik çizgiden itibaren sona kadar olan kısmı kopyalayarak kod içerisindeki ilgili kısma yapıştırıyoruz. Burada test it butonuna basarak tabloya kayıt işlemini test edebilirsiniz. Eğer bu aşamaya kadar her şey doğru gittiyse google drive hesabınız içerisinde bir tablo oluşturacak ve içerisinde bir kayıt belirecektir.&lt;/strong&gt;
&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1lmpzAYEXq-tjezLYjkVUDAoIKOXzS7Tp&quot; alt=&quot;google asistant ayarlar&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;ifttt-bildirim-ayarları&quot;&gt;IFTTT Bildirim Ayarları&lt;/h4&gt;

&lt;p&gt;Bu kısımda IFTTT mobil uygulaması aracılığıyla telefona bildirim gönderme özelliğini gerçekleştireceğiz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Yukarıdaki işlemle aynı olarak create butonuna basarak yeni bir senaryo oluşturacağız. Daha sonra if kutucuğundaki add butonuna tıkladıktan sonra webhook’u seçiyoruz. Aşağıdaki gibi textbox kısmına notification yazıp create trigger butonuna tıklıyoruz.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1wkm9n_knZmtL2VYaVRRS5LRsVxHbKdnK&quot; alt=&quot;google asistant ayarlar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Then kutucuğu içerisindeki add butonuna tıklayıp çıkan pencerede notification appletini aratarak buluyoruz ve daha sonra tıklıyoruz.&lt;/strong&gt;
&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1MfW7cZt85L6TZKJ-CtEq8YvpAqq65M0h&quot; alt=&quot;google asistant ayarlar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bu kısımda iki seçenek geliyor. Biz “Send a Notification From The IFTTT App” seçeneğine tıklayacağız.&lt;/strong&gt;
&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1FP2x8NdCgMiMY0yMHHxEz5yJR8uP1q6h&quot; alt=&quot;google asistant ayarlar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Son olarak bildirimin içeriğini çıkan pencerede girdikten sonra create action butonuna basarak senaryomuzu oluşturmuş oluyoruz.&lt;/strong&gt;
&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1ni5QuGvwtegBdMvGtUUGGoPY2yBjR7QY&quot; alt=&quot;google asistant ayarlar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bu kısımdan sonra google tablolara ekleme yaptığımız bölümde olduğu gibi linki alarak kod içerisindeki ilgili bölüme yapıştırıyoruz.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;proje-devre-şeması&quot;&gt;Proje Devre Şeması&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1FD-H2XcboMtBJ9XSJiew-ljU0Qpym0FJ&quot; alt=&quot;google asistant ayarlar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;proje-kaynak-kodları&quot;&gt;Proje Kaynak Kodları&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;#include &amp;lt;ESP8266WiFi.h&amp;gt;
#include &amp;lt;ESP8266HTTPClient.h&amp;gt;  
#include &amp;lt;DNSServer.h&amp;gt;
#include &amp;lt;WiFiManager.h&amp;gt; 

void Send_Notification_From_IFTTT(); 
void Start_To_Wifi_Connection();
void makeIFTTTRequest(String status); 

// *********IFTTT****************

const char* server = &quot;maker.ifttt.com&quot;;

const char* resource = &quot;google tablolar kayıt linki&quot;; // Google tablolar kayıt linki

HTTPClient http;

void setup() {
  Serial.begin(9600);
  WiFiManager wifiManager;      
  wifiManager.autoConnect(&quot;Mlock Motion Security&quot;); // &quot;Mlock Motion Security&quot; adında bir AP oluşturur.
}

void loop() {
  Send_Notification_From_IFTTT();
  makeIFTTTRequest(&quot;Hareket algılandı!&quot;);
  ESP.deepSleep(0);                                 // Derin uykuya geçirir.
}

void Send_Notification_From_IFTTT()    
{ 
  String url = &quot;http://maker.ifttt.com/bildirim linki&quot;; // Bildirim senaryosunun linki
  http.begin(url);
  http.GET();
  http.end();
}

void makeIFTTTRequest(String status) {
  WiFiClient client;
  Serial.print(&quot;Connecting to &quot;); 
  Serial.print(server);
  
  int retries = 5;
  while(!!!client.connect(server, 80) &amp;amp;&amp;amp; (retries-- &amp;gt; 0)) {
    Serial.print(&quot;.&quot;);
  }
  Serial.println();
  if(!!!client.connected()) {
    Serial.println(&quot;Failed to connect...&quot;);
  }
  
  Serial.print(&quot;Request resource: &quot;); 
  Serial.println(resource);

  String jsonObject = String(&quot;{\&quot;value1\&quot;:\&quot;&quot;) + status + &quot;\&quot;}&quot;;
                      
  client.println(String(&quot;POST &quot;) + resource + &quot; HTTP/1.1&quot;);
  client.println(String(&quot;Host: &quot;) + server); 
  client.println(&quot;Connection: close\r\nContent-Type: application/json&quot;);
  client.print(&quot;Content-Length: &quot;);
  client.println(jsonObject.length());
  client.println();
  client.println(jsonObject);
        
  int timeout = 5 * 10; //5 seconds             
  while(!!!client.available() &amp;amp;&amp;amp; (timeout-- &amp;gt; 0)){
    delay(100);
  }
  if(!!!client.available()) {
    Serial.println(&quot;No response...&quot;);
  }
  while(client.available()){
    Serial.write(client.read());
  }
  
  Serial.println(&quot;\nclosing connection&quot;);
  client.stop(); 
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;sonuç-&quot;&gt;Sonuç :)&lt;/h2&gt;

&lt;div class=&quot;youtube-wrapper&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube.com/embed/HDxh7Rv0afM&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Rfid Ve Google Asistant İle Açılabilen Kapı Otomatiği</title>
   <link href="http://localhost:4000/2021/03/27/uzaktan-kontroll%C3%BC-ve-google-asistant-i%CC%87le-kontrol-edilebilen-kap%C4%B1-otomati%C4%9Fi"/>
   <updated>2021-03-27T14:39:00+03:00</updated>
   <id>http://localhost:4000/2021/03/27/Uzaktan-Kontrollü-Ve-Google-Asistant-İle-Kontrol-Edilebilen-Kapı-Otomatiği</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?id=1xHLijZcZAthUZLFhfuBar0_oeQHLvsBL&quot; alt=&quot;Tittle-Photo&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;proje-hakkında&quot;&gt;Proje Hakkında&lt;/h1&gt;

&lt;p&gt;Herkese merhabalar, bu blog yazısında Google asistan, rfid kart(anahtarlık), Blynk üzerinden açılabilen aynı zamanda google tablolar üzerinde kimin giriş yaptığını ve ne zaman girdiğini log tutabilen kapı otomatiği projesinden bahsedeceğim.&lt;/p&gt;

&lt;h4 id=&quot;proje-gereksinimleri&quot;&gt;Proje Gereksinimleri&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;RC522 RFID NFC modülü&lt;/li&gt;
  &lt;li&gt;NodeMCU geliştirme kartı&lt;/li&gt;
  &lt;li&gt;Yeşil, sarı, kırmızı (3 adet) 5mm led&lt;/li&gt;
  &lt;li&gt;1 adet buton&lt;/li&gt;
  &lt;li&gt;1 adet 220V röle&lt;/li&gt;
  &lt;li&gt;LM2596 ayarlanabilir voltaj düşürücü&lt;/li&gt;
  &lt;li&gt;2 Pin yeşil klemens&lt;/li&gt;
  &lt;li&gt;Delikli pertinaks&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.thingiverse.com/thing:4808529&quot; target=&quot;_blank&quot;&gt;3D printerdan çıkarılması gereken STL dosyaları&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;projede-kullanılan-platformlar&quot;&gt;Projede Kullanılan Platformlar&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ifttt.com/&quot; target=&quot;_blank&quot;&gt;IFTTT&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blynk.io/&quot; target=&quot;_blank&quot;&gt;Blynk&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.google.com/sheets/about/&quot; target=&quot;_blank&quot;&gt;Google Sheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-adım-proje-i̇çin-blynk-kurulumu&quot;&gt;1. Adım Proje İçin Blynk Kurulumu&lt;/h1&gt;

&lt;h4 id=&quot;blynk-nedir-&quot;&gt;Blynk Nedir ?&lt;/h4&gt;

&lt;p&gt;Blynk nesnelerin interneti için tasarlanmış bir IOT platformudur. Donanımı uzaktan kontrol edebilir,donanıma bağlı sensörlerden gelen veriyi okuyabilir, verileri depolayabilir, görselleştirebilir ve diğer birçok şeyi yapabilen bir IOT platformudur.&lt;/p&gt;

&lt;h4 id=&quot;blynk-kurulumu-&quot;&gt;Blynk Kurulumu ?&lt;/h4&gt;

&lt;p&gt;Google Play Store üzerinden Blynk uygulamasını android cihazınıza &lt;a href=&quot;https://play.google.com/store/apps/details?id=cc.blynk&amp;amp;hl=tr&quot;&gt;bu linkten&lt;/a&gt; ulaşarak kurabilirsiniz. Cihazınıza kurduktan sonra bir blynk hesabı oluşturmalısınız. Hesap oluşturduktan sonra “New Project” butonuna tıklayarak yeni bir proje oluşturmalısınız.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?id=1SGSmGWn1AgqbUdxsJi8LUmAtFHZQ8fiN&quot; alt=&quot;Blynk Google Play&quot; /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;“New Project” butonuna tıkliyoruz&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Proje adı, kartı ve bağlantı tipini seçerek “create” butonuna tıklıyoruz butona tıkladığınız anda kod içerisinde kullanacağımız auth kodu emailinize gönderilecek.&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1xeOLmsgKh12LBAX_sXz6e-fiD6r8TSP8&quot; alt=&quot;New Project&quot; /&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1xV83gX9S5CM69jvV2zPhj5L-ez34CA02&quot; alt=&quot;New Project Ayarları&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Widget kutusundan bir button ekliyoruz&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Eklenen butonun pinini bir sanal pin olan V2 olarak değiştiriyoruz&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1xlu-KwwMM17ob2y_DbUzFxnK6zsWlyGI&quot; alt=&quot;Button&quot; /&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1xhAAgSCMZNqoEnDWMeSvg0m6eD5ZBe54&quot; alt=&quot;Button Ayarları&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Widget kutusundan bir notification ekliyoruz&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Eklenen notification widget’ın ayarları&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1xgV8GeeIrfvCDjl0rTl9BZbxcfxCe9kn&quot; alt=&quot;Button&quot; /&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1xgtCliMMW6ngqb3uLnj_9TEh7MnOpY3U&quot; alt=&quot;Button Ayarları&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h5 id=&quot;eklenen-widgetlar-sonrası-blynk-paneli-genel-görünümü&quot;&gt;Eklenen widgetlar sonrası blynk paneli genel görünümü&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1y10caqjzqgRAtYqLVmAMviwtJG_KtK0L&quot; alt=&quot;New Project&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;2-adım-proje-i̇çin-ifttt-google-assistant-kurulumu&quot;&gt;2. Adım Proje İçin IFTTT (Google Assistant) Kurulumu&lt;/h1&gt;

&lt;h4 id=&quot;ifttt-nedir-&quot;&gt;IFTTT Nedir ?&lt;/h4&gt;

&lt;p&gt;IFTTT “If This, Then That” anlamına gelir. IFTTT hem bir websitesidir hem de bir mobil uygulamaya sahiptir. Platformun sağladığı şey uygulamaları birbirine bağlamak. Kısacası servislerin ve cihazların birbirleri ile konuşması diyebiliriz. Örneğin android telefonunuzda bir arama yaparsanız, o aramanın günlüğü bir Google e-tablosuna eklenir. Bunu IfTT size sağlar. Veya evde telefonunuzu kaybettiğiniz zaman google home mini cihazınıza “Benim telefonum nerede ?” sorusunu iletirseniz telefonunuzu çaldıracaktır. Bir başka örnek ise toplantı saatiniz geldiğinde philips hue ampüllerinizi yeşil renkte yakabilirsiniz. Bu ve bunun gibi senaryoları IFTTT ile yapmanız mümkün.&lt;/p&gt;

&lt;p&gt;Ben bu projede evinizdeki google home mini cihazına veya telefonunuzdaki google asistanınıza “hey google open the door” dediğinizde dış kapı otomatiğini tetiklettirmesini öğreteceğim.&lt;/p&gt;

&lt;h4 id=&quot;ifttt-google-assistant-applet-kurulumu-&quot;&gt;IFTTT (Google assistant Applet) Kurulumu ?&lt;/h4&gt;

&lt;p&gt;IFTTT web sitesine &lt;a href=&quot;https://ifttt.com/&quot;&gt;buradan&lt;/a&gt; ulaşabilirsiniz. Siteye google hesabınızla kayıt olup giriş yaptıktan sonra sırasıyla aşağıdaki adımları izleyerek google asistan ile oluşturduğumuz sisteme komut gönderip kapyı açtırabiliriz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;İlk olarak IFTTT sitesinde ana sayfada iken sağ üst köşedeki “Create” butonuna tıklıyoruz.&lt;/strong&gt;
&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1iLJ4JJd7-m1fLEu8Y1wJM15RXsZlJXZF&quot; alt=&quot;IFTTT Create&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gelen sayfada if kutucuğu içerisindeki “add” butonuna tıklıyoruz.&lt;/strong&gt;
&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1B8G0RTALe21FgpL3oJmEuasAai2cAXGc&quot; alt=&quot;IFTTT IF THIS THAN THAT&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ekrana gelen servisler içerisinden google assistant seçeneğini seçiyoruz.&lt;/strong&gt;
&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1tg7RbTajvHXVjf-WGprBpYe6847GIqdh&quot; alt=&quot;Google Assistant&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bu kısımda olayın tetiklenmesi için google asistanınıza ne söylemek istediğinizi ve asistanınızın size dönüş olarak ne cevap vereceğini belirliyorsunuz. Create Trigger butonuna basıp tetikleyiciyi oluşturmuş oluyoruz.&lt;/strong&gt;
&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1cTxWRGKWHt1BWMtlnqw2s9fN_3S_P6XQ&quot; alt=&quot;google asistant ayarlar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gelen sayfada then that kutucuğu içerisindeki “add” butonuna tıklıyoruz ve servisler arasından webhooks’u seçiyoruz.&lt;/strong&gt;
&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1jpKy1QGhKs6HmuK5v5cCx6XrOQV3cPt1&quot; alt=&quot;google asistant ayarlar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;“authcode” yazan kısma blynk’in kayıt olunan mail adresine gönderdiği auth kodunu yapıştırıyoruz ve diğer ayarları bu şekilde değiştiriyoruz. Create action butonuna basıyoruz&lt;/strong&gt;
&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1pNMt2I5e3UAf8mZKxlS6TuFrKEVl1J6y&quot; alt=&quot;google asistant ayarlar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;2-adım-proje-i̇çin-ifttt-google-sheets-applet-kurulumu&quot;&gt;2. Adım Proje İçin IFTTT (Google Sheets Applet) Kurulumu&lt;/h1&gt;

&lt;h4 id=&quot;ifttt-google-sheets-applet-kurulumu-&quot;&gt;IFTTT (Google Sheets Applet) Kurulumu ?&lt;/h4&gt;

&lt;p&gt;Her giren kullanıcı için okuttuğu rfid kartın id’si, giriş yaptığı zaman, adı soyadı ve açılıp açılmadığı bilgilerini göndermek için google tablolarda kayıt tutuyoruz. Google sheet appletlerini eklemek için sırasıyla aşağıdaki adımları izlememiz gerekiyor. 
Tekrar ana sayfada “create” tuşuna bastıktan ve if kutucuğu içerisindeki “add” butonuna bastıktan sonra servisler içerisinden webhook servisini seçiyoruz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;event name kısmına logger yazıyorum bu benim yazdığım programın bir gereği siz başka bir şey yazabilirsiniz. create trigger butonuna tıkladıktan sonra then kutucuğunun içerisindeki add butonuna tıklıyoruz ve tekrardan yeni bir servis arıyoruz.&lt;/strong&gt;
&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1i8Gb5ZHZktLfCakpXfq7BvEFNx8HvWAR&quot; alt=&quot;google asistant ayarlar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Google sheets servisini arıyoruz ve seçiyoruz.&lt;/strong&gt;
&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1jHGeHfhtW_ecD_TgvVwF99dPzqlFIO0C&quot; alt=&quot;google asistant ayarlar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Daha sonra add row to spreadsheet seçeneğine tıklıyoruz. Bunu seçmemizin sebebi tabloya her yeni bir bilgi geldiğinde yeni bir satıra ekleniyor.&lt;/strong&gt;
&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1CnbDMIM9bwLpFpeo8HDDd8WhYBOnJyEa&quot; alt=&quot;google asistant ayarlar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ayarlar aşağıdaki gibi olmalıdır eğer isterseniz tablo adını değiştirebilirsiniz.&lt;/strong&gt;
&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1zQlM7q6lLmZfqfHNvF38NUgc3yuhNDs1&quot; alt=&quot;google asistant ayarlar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;proje-fritzing-şeması&quot;&gt;Proje Fritzing Şeması&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1Fkml9wqiZ7cEA1TqU5v_uhlK3bOEZdzJ&quot; alt=&quot;google asistant ayarlar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;proje-kaynak-kodları&quot;&gt;Proje Kaynak Kodları&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;
#include &amp;lt;SPI.h&amp;gt;    // Rfid modülünün haberleşmesi için SPI kütüphanesi eklendi.
#include &amp;lt;MFRC522.h&amp;gt;  // Rfid modülü için MFRC522 kütüphanesi eklendi.

#include &amp;lt;WiFiClient.h&amp;gt; 
#define BLYNK_PRINT Serial
#include &amp;lt;ESP8266WiFi.h&amp;gt;
#include &amp;lt;BlynkSimpleEsp8266.h&amp;gt;

//***** KABLOSUZ AYARLARI ******* 
char auth[] = &quot;Blynk auth code&quot;;    //Blynk auth code girilecek
const char* ssid = &quot;Wifi SSID&quot;;     //Bağlanılacak olan wifi ağı adı
const char* pass = &quot;Wifi Pass&quot;;     //Bağlanılacak olan wifi ağı şifresi


//************* IFTTT ****************
const char* server = &quot;maker.ifttt.com&quot;; 
// Kişiye özel IFTTT Url'i
const char* resource = &quot;Google Sheet appletinden gelen link&quot;;  // Google Sheet appletinde bulunan link

//*********** RFID **************
#define RST_PIN         D8           
#define SS_PIN          D4          
#define relay           D3
#define button          D8

MFRC522 mfrc522(SS_PIN, RST_PIN);   
String readCardId = &quot;&quot;; // okunan kart idsi
String tempid = &quot;&quot;;     // değişken kart idsi

//******** Led Pins and Button Pin *************
#define green           D1
#define red             D0
#define yellow          D2

unsigned long lastTime = 0;
unsigned long lastTime1 = 0;
unsigned long lastTime2 = 0;

unsigned long delayTime = 10000; 
unsigned long delayTime1 = 2500;  
unsigned long delayTime2 = 60000;

WiFiClient client;

//***** ANAHTAR LİSTESİ ***********
String Key_list[2][2] =          // Anahtar Listesi
  {
  {&quot;örnek kullanıcı adı1&quot;,&quot;örnek kullanıcı 1 kartid&quot;},
  {&quot;örnek kullanıcı adı2&quot;,&quot;örnek kullanıcı 2 kartid&quot;},
  

  };

// Google tablolar ile bağlantı sağlayan fonksiyon 
void connectGoogleSheets()
{
  int retries = 8;

  while(!!!client.connect(server, 80) &amp;amp;&amp;amp; (retries-- &amp;gt; 0)) {
    Serial.print(&quot;.&quot;);
  }
} 
// IFTTT web servisine bir http isteği gönderir.
void makeIFTTTRequest(String name_surname,String kart_id,String durum) {
  digitalWrite(red,HIGH);
  Serial.print(&quot;Connecting to &quot;); 
  Serial.print(server);
  
  int retries = 5;
  while(!!!client.connect(server, 80) &amp;amp;&amp;amp; (retries-- &amp;gt; 0)) {
    Serial.print(&quot;.&quot;);
  }
  Serial.println();
  if(!!!client.connected()) {
    Serial.println(&quot;Failed to connect...&quot;);
  }
  
  Serial.print(&quot;Request resource: &quot;); 
  Serial.println(resource);

  
  String jsonObject = String(&quot;{\&quot;value1\&quot;:\&quot;&quot;) + name_surname + &quot;\&quot;,\&quot;value2\&quot;:\&quot;&quot; + kart_id
                      + &quot;\&quot;,\&quot;value3\&quot;:\&quot;&quot; + durum + &quot;\&quot;}&quot;;
                      
            
  client.println(String(&quot;POST &quot;) + resource + &quot; HTTP/1.1&quot;);
  client.println(String(&quot;Host: &quot;) + server); 
  client.println(&quot;Connection: close\r\nContent-Type: application/json&quot;);
  client.print(&quot;Content-Length: &quot;);
  client.println(jsonObject.length());
  client.println();
  client.println(jsonObject);
        
  int timeout = 5 * 10; // 5 seconds             
  while(!!!client.available() &amp;amp;&amp;amp; (timeout-- &amp;gt; 0)){
    delay(100);
  }
  if(!!!client.available()) {
    Serial.println(&quot;No response...&quot;);
  }
  while(client.available()){
    Serial.write(client.read());
  }
  
  Serial.println(&quot;\nclosing connection&quot;);
  client.stop(); 
  digitalWrite(red,LOW);
}
String getID()  
{
  digitalWrite(green,HIGH);
  delay(200);
  readCardId = &quot;&quot;;
  if(!mfrc522.PICC_IsNewCardPresent())
    {
      return &quot;&quot;;
    }
    if(!mfrc522.PICC_ReadCardSerial())
    {
      return &quot;&quot;;
    }
    for(int i = 0; i &amp;lt; mfrc522.uid.size;i++)
    {
      readCardId += String(mfrc522.uid.uidByte[i],HEX);
    }
    Serial.println(readCardId);
    digitalWrite(green,LOW);
    return readCardId;
}

void openDoor()   // Kapı aç metodu kapı otomatiğini 200 milisaniye açıyor ve kapatıyor.
{
  digitalWrite(relay,HIGH);
  delay(200);
  digitalWrite(relay,LOW);
}

void decision()   //Karar fonksiyonu ile gelen kart id'nin kararı verilir.
{
  
  for(int count=0;count&amp;lt;11;count++)
    {
      if(Key_list[count][1] == tempid)
      {
        digitalWrite(red,HIGH);
        digitalWrite(green,LOW);
        
        Serial.print(Key_list[count][0]);
       // Serial.println(&quot; Adli kisi giris yapti.&quot;);
        openDoor();
        if(Blynk.connected()) makeIFTTTRequest(Key_list[count][0],Key_list[count][1],&quot;Açıldı.&quot;);
        
        digitalWrite(red,LOW);
        digitalWrite(green,HIGH);
        tempid = &quot;&quot;;
        break;
      }
    }
     if(tempid != &quot;&quot;)
      {
        if(Blynk.connected()) makeIFTTTRequest(&quot;Bilinmeyen Kullanici&quot;,tempid,&quot;Açılmadı.&quot;);
        digitalWrite(red,HIGH);
        delay(250);
        digitalWrite(red,LOW);
      }
}

BLYNK_WRITE(V2) // Blynk Write(v2) ile ikinci sanal pinden okuma alınır.Alınan okuma 1 ise kapı açma izni verilir.
{
  digitalWrite(green,LOW);
  int pinData = param.asInt(); 
  if(pinData == 1){
    openDoor();
    makeIFTTTRequest(&quot;Google Asistan&quot;,&quot;Kartız&quot;,&quot;Açıldı.&quot;);
  }
  digitalWrite(green,HIGH);
}

void setup() {
  Serial.begin(9600);  // Seri haberleşmeyi başlatıyoruz.                                         
  SPI.begin();         // Spi haberleşme başlatıldı.                                       
  mfrc522.PCD_Init();  // Rfid modül başlatıldı.
  
  // röle,ledler,ve buton için giriş çıkış atandı.
  pinMode(relay,OUTPUT);
  pinMode(green,OUTPUT);
  pinMode(red,OUTPUT);
  pinMode(yellow,OUTPUT);
  pinMode(button,INPUT);
  digitalWrite(relay,LOW);
  
  Blynk.config(auth,&quot;blynk-cloud.com&quot;, 8080);
  
}

void loop() {
  unsigned long nowTime = millis(); 
  unsigned long nowTime1 = millis();
  unsigned long nowTime2 = millis();

  if (nowTime - lastTime &amp;gt;= delayTime) 
  {
    lastTime = nowTime;    
    if(WiFi.status() != WL_CONNECTED) // her 10 saniyede bir internet bağlantısı kontrol edilir eğer bağlantı yok ise tekrar bağlanmayı dener. 
    {
      digitalWrite(yellow,LOW);
      WiFi.begin(ssid,pass);
      Blynk.config(auth,&quot;blynk-cloud.com&quot;, 8080);
    } 
    else digitalWrite(yellow,HIGH);
  }

  if(nowTime1 - lastTime1 &amp;gt;= delayTime1) // her 2,5 saniyede bir kapı açma isteği butonuna basılıp basılmadığı kontrol ediliyor.
  {
    lastTime1 = nowTime1;
    if(digitalRead(button) == true){
      digitalWrite(red,HIGH);
      Blynk.notify(&quot;Bina içersindeki kapıdan bir kişi kapı açma isteği gönderdi.&quot;); 
    }
    else digitalWrite(red,LOW);
  }

  if(nowTime2 - lastTime2 &amp;gt;= delayTime2)  // bir dakikada bir google tablolar ile bağlantı sağlanıyor.
  {
    lastTime2 = nowTime2;
    connectGoogleSheets();
  }
 
  tempid = getID(); //kart üzerinde okunan kart id tempid değişkenine atılır.
  decision();  // karar metodu ile kapının açılıp açılmayacağı kararı verilir.

  Blynk.run();
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;sonuç&quot;&gt;Sonuç&lt;/h2&gt;

&lt;div class=&quot;youtube-wrapper&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube.com/embed/S1oL-IkkozY&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>3D Printer İle Iron Man MK3 Helmet(Kask) Yapımı</title>
   <link href="http://localhost:4000/2021/03/24/3d-printer-i%CC%87le-iron-man-mk3-helmet-kask-yap%C4%B1m%C4%B1"/>
   <updated>2021-03-24T14:39:00+03:00</updated>
   <id>http://localhost:4000/2021/03/24/3D Printer İle Iron Man Mk3 Helmet(Kask) Yapımı</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1ua0I6wyMKHyVWnALowyXIKjxqIK_PqD4&quot; alt=&quot;AsenkronServer&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;proje-hakkında&quot;&gt;Proje Hakkında&lt;/h1&gt;

&lt;p&gt;Herkese merhabalar, bu blog yazısındaki projede iron man’in açılıp kapanabilen 1:1 oranındaki kaskını 3d printer ile çıkarıp belli işlemlerden geçirerek nasıl yaptığımdan bahsedeceğim.&lt;/p&gt;

&lt;h3 id=&quot;gerekli-malzemeler&quot;&gt;Gerekli Malzemeler&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;3 Boyutlu Yazıcı (Benim kullandığım 3 boyutlu yazıcı Ender 3 Pro)&lt;/li&gt;
  &lt;li&gt;Çelik Macun (Nalburlarda rahatlıkla bulabilirsiniz)&lt;/li&gt;
  &lt;li&gt;Hızlı Yapıştırıcı (Parçaları birbirine birleştirmek için)&lt;/li&gt;
  &lt;li&gt;80 kum 100 kum zımpara&lt;/li&gt;
  &lt;li&gt;Filament (kullanılan filamentlerin renklerinin bir önemi yok. Sonuçta boyanacaklar)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;projeye-giriş&quot;&gt;Projeye Giriş&lt;/h1&gt;

&lt;p&gt;İlk olarak parçaları 3d printerdan çıkarmamız gerekiyor. Kaskın tasarımını thingiverse sitesinde aldım sizler de kaskın .stl dosyalarına &lt;a href=&quot;https://www.thingiverse.com/thing:260152&quot; target=&quot;_blank&quot;&gt;buradan&lt;/a&gt; ulaşabilirsiniz. Bu arada &lt;a href=&quot;https://www.thingiverse.com/&quot; target=&quot;_blank&quot;&gt;thingiverse&lt;/a&gt; sitesi hayatınızı kolaylaştıracak birçok tasarımı bulabileceğiniz ve bu tasarımların kaynak dosyalarını indirip 3 boyutlu yazıcınızda çıkarabileceğiniz bir websitesidir.Sizler de siteye üye olup kendi çizimlerinizi yükleyebilirsiniz.&lt;/p&gt;

&lt;h2 id=&quot;1-adım-parçaların-basılması&quot;&gt;1. Adım Parçaların Basılması&lt;/h2&gt;

&lt;p&gt;Bütün parçaları olabildiğince risksiz (yazıcının hata yapıp baskının yarıda kalmaması durumları) basmaya çalıştım. Parçaları baskıya vermeden önce tablaya herhangi bir kimyasal sürmeden ancak baskının yüzeye güzel bir şekilde yapışması ve yazıcının baskı sırasında parçayı düşürmemesi için cura dilimleyici programında yapı levhası yapıştırması başlığı altındaki kenar seçeneğini seçtim. Katman yüksekliği olarak ise katman boşluklarına macun atacağım için 0.3 mm katman yüksekliğinde bastım. Bazı parçalarda destek varken bazı parçalarda destek yok zaten bunları fotoğraflarda göreceksiniz.&lt;/p&gt;

&lt;h3 id=&quot;bütün-baskılar-için-cura-ayarları&quot;&gt;Bütün baskılar için cura ayarları&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;0.3 mm katman yüksekliği&lt;/li&gt;
  &lt;li&gt;Destek var (kulaklar hariç)&lt;/li&gt;
  &lt;li&gt;%25 Dolgu&lt;/li&gt;
  &lt;li&gt;1 mm duvar kalınlığı&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Maske Alt Parçası&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Maske Üst Parçası&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1v7OnLypmbZ8aGPBzunV6-M_M6DYTuMLI&quot; alt=&quot;Maske Alt Parça&quot; /&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1v4YyMv62ntNMoXzNpmu1FUDQ7X8aN0TL&quot; alt=&quot;Maske üst Parça&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Çene&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Üst&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1thCfbY2o0B4e5Q4pG9ypRqGwXAvceaYT&quot; alt=&quot;Çene&quot; /&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1tKi8EJEK51zO-9cZUHjS-4krEiN7t_TO&quot; alt=&quot;Üst&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Sağ Kulak&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Sol Kulak&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1tGBSlzJQ1DrYpdntPrw5ZMu6rb-9t4uM&quot; alt=&quot;Sağ kısım&quot; /&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1t01FY-aNl-lOpeXPyUR2RH1ivokjS2Ro&quot; alt=&quot;Sol kısım&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;arka-kısım&quot;&gt;Arka Kısım&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1qzwXIbvmB4YoAC4D50IsoQMx0UilSfJJ&quot; alt=&quot;Arka kısım&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;parçaların-tamamının-bant-i̇le-bir-araya-getirilmiş-hali&quot;&gt;Parçaların Tamamının Bant İle Bir Araya Getirilmiş Hali&lt;/h4&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1r8bVSy3bfr89_UFGfZZbr1NhuNI6KLGH&quot; alt=&quot;Parçaların Tamamının Bant İle Bir Araya Getirilmiş Hali&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1sdB0Z3GofxLXxiiKNC0OFVaxTniwaGjW&quot; alt=&quot;Parçaların Tamamının Bant İle Bir Araya Getirilmiş Hali 2&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-adım-macunlama-ve-zımparalama&quot;&gt;2. Adım Macunlama Ve Zımparalama&lt;/h2&gt;

&lt;p&gt;Bu aşamada macunlama ve zımparalama hakkında biraz edindiğim tecrübelerimden bahsedeceğim.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Macun çekerken macun çektiğiniz baskının detaylarını kaybetmemeye özen gösterin. Ben bu işlemi ilk defa yaptığım için birkaç detayı kaybettim. Baskının detay kısımlarına macun sürmeyin&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Macun yaparken benim tecrübe ettiğim ve aslında çok dikkat edilmesi gereken bir diğer önemli konu ise macunu baskı yüzeyine yedirerek sürmeniz ve yüzeye ne az ne çok macun sürmeniz. Eğer fazla macun sürerseniz zımpara işleminin sonunda kol kasınızın geliştiğini fark edeceksiniz. :) Eğer çok az macun sürerseniz zımpara işleminde baskı yüzeyine zarar verdiğinizi gözlemleyeceksiniz.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Zımpara yaparken olabildiğince zımpara yaptığınız yüzeyi durarak izleyin. Çünkü gereğinden fazla yüzeye yaklaşmamanız yüzeyi koruyacaktır. Bu hususta diğer bir önerim ise yüzeye yaklaştıkça daha ince bir zımpara kullanmanız.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Zımparayı bir tahta parçasına sararak zımparalama işlemini yaparsanız daha rahat çalıştığınızı, zımparanın genel formunu koruduğunuzu ve olası zımpara üzerindeki çatlakların oluşmasını önlediğinizi gözlemleyeceksiniz.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Macun çekilmiş hali&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Zımpara yapılmış hali&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1o5VyOfnAKkUQfi_KYhlcJGQefMP5Xsu5&quot; alt=&quot;Macun çekilmiş hali&quot; /&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1o2MMwn_YYer13MPTajfPhwrW2WylnxxV&quot; alt=&quot;Zımpara yapılmış hali&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-adım-astar-ve-sprey-boya&quot;&gt;3. Adım Astar Ve Sprey Boya&lt;/h2&gt;

&lt;p&gt;Bu aşamada astar ve sprey boya hakkında biraz edindiğim tecrübelerimden bahsedeceğim.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Sprey boyayı kullanmadan önce çalkalamanız uzun süre hareketsiz olarak kalmış olan boya şişesinin içerisindeki çökelmiş bileşenleri birbirine  misket aracılığıyla tekrardan karıştıracaktır.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Spreye bastığınız andan itibaren elinizi hareket ettirmelisiniz ve boya değen bölgeye kurumadan tekrar uğramamalısınız. Çünkü gereğinde fazla ıslak boya kuru yüzey üzerinde duramaz ve bir süre sonra akmaya başlar.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Boya yaptığınız ortamın tozlu bir ortam olmadığına dikkat edin ve kesinlikle ev içerisinde boya yapmayın ve boyama esnasında maske takmayı unutmayın. Zira bu kimyasal maddeden çıkan havayı solumanızı istemem.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Sprey boya kullanımı hakkında birkaç ipucu için bu &lt;a href=&quot;https://www.youtube.com/watch?v=ZDrANAZE-9A&quot; target=&quot;_blank&quot;&gt;videoyu&lt;/a&gt; izleyebilirsiniz.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1vKrjsbgFPamkxSl-jXVlanaT1zkoHLWA&quot; alt=&quot;Astarlı Hali 1&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1msAVv2ybYowdb-zqVZAVhg1Pwu9MPcTd&quot; alt=&quot;Astarlı Hali 2&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Zımpara sonrası oluşan çok minik boşlukları doldurmak için zımparalanmış yüzeyi astar sprey boya ile boyuyorum.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1mjiRrAghQ0VamFlu6b1mWiumc3Il3l6D&quot; alt=&quot;Boyanmış hali1&quot; /&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1mjL2mz3MrtD89_ja_nnKZkoFUd0UebLB&quot; alt=&quot;Boyanmış hali2&quot; /&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1mghBdJ68QwFT7L1DMRQvb303vRjZ6APu&quot; alt=&quot;Boyanmış hali3&quot; /&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1mZ3TB9-Y0LRhbZH7nFAOzPHq60El1jp3&quot; alt=&quot;Boyanmış hali4&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-adım-hareketli-parçalar-elektronik-ve-yazılım&quot;&gt;4. Adım Hareketli Parçalar, Elektronik Ve Yazılım&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1verjAwDZai8xZuhf9aeZU77U82luTJaq&quot; alt=&quot;Astarlı Hali 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hareketli parçaların tasarımı bana aittir ve &lt;a href=&quot;https://www.thingiverse.com/thing:4804827&quot; target=&quot;_blank&quot;&gt;bu linkten&lt;/a&gt; parçalara ulaşıp 3 boyutlu yazıcınız aracılığıyla çıktı alabilirsiniz.&lt;/p&gt;

&lt;h3 id=&quot;çalışma-prensibi&quot;&gt;Çalışma Prensibi&lt;/h3&gt;

&lt;p&gt;Kaskın içerisinde çene kısmına konumlandırdığımız hall sensöründen okunan değer ile servoların açılıp kapanma kararları veriliyor ve maske açılıp kapanıyor. Elimize basitçe bir mıknatıs alıp hall sensörün bulunduğu konuma yaklaştırdığımızda açıp kapatabiliriz.&lt;/p&gt;

&lt;h3 id=&quot;bu-adım-için-gerekli-malzemeler&quot;&gt;Bu adım için gerekli malzemeler&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;2 x Sg90 micro servo&lt;/li&gt;
  &lt;li&gt;4 x 8 mm m3 civata&lt;/li&gt;
  &lt;li&gt;2 x 3 mm somun&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.thingiverse.com/thing:4804827&quot; target=&quot;_blank&quot;&gt;hareketli parçalar(3d printer ile çıkacak)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Arduino uno (siz isterseniz ardunino nano kullanabilirsiniz.)&lt;/li&gt;
  &lt;li&gt;On / Off switch&lt;/li&gt;
  &lt;li&gt;2 x 18650 pil&lt;/li&gt;
  &lt;li&gt;2’li 18650 pil yatağı&lt;/li&gt;
  &lt;li&gt;Jumper kablolar&lt;/li&gt;
  &lt;li&gt;us1881 hall effect sensor&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;proje-fritzing-şeması&quot;&gt;Proje Fritzing Şeması&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1-k46FhwpG0wE4tLIl0vL-rqNC-Bto_lt&quot; alt=&quot;Fritzing şeması&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;proje-kaynak-kodları&quot;&gt;Proje Kaynak Kodları&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;#include &amp;lt;Arduino.h&amp;gt;
#include &amp;lt;Servo.h&amp;gt;  // servo.h kütüphanesini dahil ediyoruz.

Servo servo1;   // Servo sınıfından servo1 ve sevo2 adlı iki servo nesnesi oluşturduk.
Servo servo2; 

int hall_sensor = 8; // Hall sensorü 8. gpio pinine tanımlıyoruz. 
bool hallstate = 0;  // Mıknatıs durumunu tutan değişken

void closeTheHelmet()   // maskeyi kapatan fonksiyon
{
    for(int i = 140; i&amp;gt;=0; i--)       // kapatırken daha yavaş kapatması için her 1 derece servo hareketinde.
    {                                 // 3ms bekleme koyuyoruz.
      if(servo1.read() == 0)          // eğer servo konumu 0 ise döngüyü kır.
      {
        break;
      }
      servo1.write(i);
      servo2.write(i);
      delay(3);
    }  
}

void openTheHelmet()    // maskeyi açan fonksiyon
{
  if(hallstate == 1)
  {
    servo1.write(140);
    servo2.write(140);
  }
}

void setup() 
{
  Serial.begin(9600); // Seri haberleşmeyi başlattık.
  servo1.attach(6);   // servo1 ve servo2 nesnesini 6 ve 7. dijital pinlere tanımlıyoruz.
  servo2.attach(7); 
  pinMode(hall_sensor,INPUT_PULLUP);
 
}
void loop() { 

  hallstate = digitalRead(hall_sensor); // hall sensörden okuma yapıyoruz.
  if(hallstate == 1)  // Eğer sensör durumu 1 ise 
  {
    Serial.println(&quot;open&quot;);
    openTheHelmet();      // maskeyi aç
  }
  else if(hallstate == 0)
  {
    Serial.println(&quot;close&quot;);
    closeTheHelmet();     // maskeyi kapat
  }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;sonuç&quot;&gt;Sonuç&lt;/h2&gt;

&lt;div class=&quot;youtube-wrapper&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube.com/embed/oex3lFJXdb8&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Esp32 İle Asenkron Olarak Çalışan Web Server Projesi</title>
   <link href="http://localhost:4000/2020/06/07/esp32-i%CC%87le-asenkron-olarak-%C3%A7al%C4%B1%C5%9Fan-web-server-projesi"/>
   <updated>2020-06-07T19:15:00+03:00</updated>
   <id>http://localhost:4000/2020/06/07/Esp32-İle-Asenkron-Olarak-Çalışan-Web-Server-Projesi</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1RBA39QFpLErzHYOGzV23YcPVw0rxgIsN&quot; alt=&quot;AsenkronServer&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;esp32-kartının-kurulumu&quot;&gt;Esp32 Kartının Kurulumu&lt;/h2&gt;

&lt;p&gt;Bilgisayarınızda halihazırda kurulu bir Arduino IDE’si olduğunu varsayıyorum. Ancak projede kullanacağımız ESP32, IDE’nin standart kurulumunda gelmiyor o yüzden bazı ek işlemler yapmamız gerekecek.&lt;/p&gt;

&lt;p&gt;Arduino IDE’sini açıp
&lt;b&gt;Dosya&amp;gt;Tercihler&lt;/b&gt; menüsünden &lt;b&gt;Ek Devre Kartları Yöneticisi URL’leri&lt;/b&gt; kısmına aşağıdaki adresi ekleyelim:
&lt;b&gt;https://dl.espressif.com/dl/package_esp32_index.json&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Daha sonra &lt;b&gt;Araçlar&amp;gt;Kart&amp;gt;Kart Yöneticisi&lt;/b&gt; kısmından Esp32 kartını bulup kuralım.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?id=1_UJ_4ufjx3jU0qw4xVHieJplmRmiBgTe&quot; alt=&quot;Kart Yöneticisi Penceresi&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;projeye-giriş&quot;&gt;Projeye Giriş&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?id=1UtJH7mTVt5Axql39misBsLFdw_CotiET&quot; alt=&quot;Asenkron Server&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Projeye başlamadan önce senkron, asenkron gibi kavramları websocket’in ne olduğundan bahsetmek istiyorum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;span style=&quot;background-color:#c0c0c0; padding:5px;border-radius:5px&quot;&gt;Senkron Nedir ?&lt;/span&gt;&lt;br /&gt;
Kelime anlamı &lt;strong&gt;eşzamanlı&lt;/strong&gt; olan senkron kelimesi yazılımda birtakım işlemlerin sıra ile yapılmasıdır.Basit bir analoji yapmak gerekirse bir fatura ödeme merkezindesiniz ve faturanızı ödemek için kuyruğa girdiniz. Sizin önünüzde fatura ödemek isteyen kişilerin faturaları ödenmeden sizin faturanız ödenmez. İşte bu şekilde işlemleri sıralı bir şekilde yapılmasına senkron programlama denir.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;span style=&quot;background-color:#c0c0c0; padding:5px;border-radius:5px&quot;&gt; Asenkron Nedir ? &lt;/span&gt; &lt;br /&gt;
Kelime anlamı “Aynı zamanda veya birlikte meydana gelmeyen” olan asenkron kelimesi yazılımda yürütülen işlemlerin uzun sürmesinden dolayı yürütülmesi gereken diğer işlemlerin beklemeden çalışmasına devam edebilmesini sağlar. Senkronu açıklarken yaptığım gibi basit bir analoji yapmam gerekirse mutfakta iki çeşit yemek pişiriyorsunuz ve birini yapmaya başladınız. Elinizdeki yemek kaynarken diğer yemeğe başlamak için elinizdeki yemeğin bitmesini beklemezsiniz. İşte bu duruma asenkron programlama denir.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;span style=&quot;background-color:#c0c0c0; padding:5px;border-radius:5px&quot;&gt; Websocket Nedir ? &lt;/span&gt; &lt;br /&gt;
WebSocket, tek bir TCP bağlantısı üzerinden tam çift yönlü iletişim kanalı sağlayan bir bilgisayar iletişim protokolüdür. WebSocket protokolü, sunucuya ve sunucudan gerçek zamanlı veri aktarımını sağlayarak, tarayıcı ile web sunucusu arasında etkileşimi sağlamaktadır. Bu, sunucunun istemci istemeden tarayıcıya içerik gönderebileceği ve bağlantıyı açık tutarak istediği zaman mesaj alabilmesini veya gönderebilmesini sağlayan standart bir yöntem ile sağlanmaktadır.Bizim bu projemizde ise web sayfası yenilenmeden kart üzerindeki ledi açıp kapatabilmemizi sağlanıyor.&lt;br /&gt;
&lt;span style=&quot;background-color:#c0c0c0; padding:5px;border-radius:5px&quot;&gt; Neden Websocket ? &lt;/span&gt;&lt;br /&gt;
Yeni bir istek HTTP protokolündeki kuralların tekrar edilmesine ve fazla trafik kullanımına neden olur.Trafik kullanımı ve HTTP protokolüyle gerçek zamanlı uygulamaların yönetilmesi maliyetli ve zor olduğundan dolayı websocket kullanılır.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Proje içerisinde kullanacağımız kütüphaneler Esp32 kartımızın ağa bağlanmasını ve üzerinde bir web sayfasını asenkron çalıştırmasını sağlayacak.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;#include &amp;lt;WiFi.h&amp;gt;
  #include &amp;lt;AsyncTCP.h&amp;gt;
  #include &amp;lt;ESPAsyncWebServer.h&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Proje içerisinde kullanılan kütüphanelerin linkleri:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;span style=&quot;font-size:18px&quot;&gt; &lt;a href=&quot;https://github.com/me-no-dev/AsyncTCP&quot;&gt;AsyncTCP.h&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;font-size:18px&quot;&gt; &lt;a href=&quot;https://github.com/me-no-dev/ESPAsyncWebServer/&quot;&gt;ESPAsyncWebServer.h&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;font-size:18px&quot;&gt; Wifi.h kütüphanesi Arduino IDE’si içerisinde halihazırda mevcut. &lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;const char* ssid = &amp;quot;Ag Adi&amp;quot;;
    const char* password = &amp;quot;Ag Parolasi&amp;quot;;
    const int led = 2;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ssid ve password kısmına bulunduğunuz ortamdaki ağın adını ve parolasını giriniz. Esp32 üzerindeki led  GPIO2 pinine bağlı olduğu için led isminde değişkeni bu pine atadık.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;const char index_html[] PROGMEM =&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Progmem anahtar sözcüğü normalde Esp32’nin Sram’ine kaydetmesi gerekirken Flash hafızasına kaydetmesini sağlar. Esp32’nin Flash hafızası 4MB’dır.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;void notFound(AsyncWebServerRequest *request) {
    request-&amp;gt;send(404, &amp;quot;text/plain&amp;quot;, &amp;quot;Sayfa Bulunamdadi&amp;quot;);
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;NotFound fonksiyonu sayfa bulunamadığında 404 hata kodunu ve sayfa bulunamadı mesajını gönderecek.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;AsyncWebServer server(80);&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;AsyncWebServer sınıfından server adlı bir nesne oluşturduk ve parametre olarak 80 verdik. Girilen parametre portu temsil ediyor.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;Serial.begin(115200);
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  if (WiFi.waitForConnectResult() != WL_CONNECTED) {
    Serial.println(&amp;quot;Wifi agina Baglanmadi!&amp;quot;);
    return;
  }
  Serial.println();
  Serial.print(&amp;quot;ESP IP Address: http://&amp;quot;);
  Serial.println(WiFi.localIP());&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Bu kod bloğunda sırasıyla;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;span style=&quot;font-size:18px&quot;&gt;Seri haberleşmeyi başlattık ve baudrate hızını 115200 olarak ayarladık.&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;font-size:18px&quot;&gt;Wifi modunu STA olarak ayarladık. STA İstasyon modudur. Esp32’yi erişim noktası tarafından kurulan bir WiFi ağına bağlamak için kullanılır.&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;font-size:18px&quot;&gt;Begin metodu ile parametresi girilen wifi ağına bağlanır.&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;font-size:18px&quot;&gt;İf bloğu wifi ağına bağlanıp bağlanmadığını kontrol ediyor. Ağa bağlanmadıysa seri monitöre “Wifi agina Baglanmadi!” yazdırır. Eğer bağlandıysa esp32’nin sunmuş olduğu web sayfasının linkini seri monitöre yazdırır.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;pinMode(led, OUTPUT);
  digitalWrite(led, LOW);&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Led adlı değişkenin bulunduğu pine(GPIO2) çıkış verdik ve başlangıçtaki durumunu kapalı olarak belirledik.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;server.on(&amp;quot;/&amp;quot;, HTTP_GET, [](AsyncWebServerRequest *request){
    request-&amp;gt;send_P(200, &amp;quot;text/html&amp;quot;, index_html);
  });&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Gelen isteğe karşılık web sayfasını istemciye gönderir.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;server.on(&amp;quot;/ac&amp;quot;, HTTP_GET, [] (AsyncWebServerRequest *request) {
    digitalWrite(output, HIGH);
    request-&amp;gt;send(200, &amp;quot;text/plain&amp;quot;, &amp;quot;ac sinyali gonderildi.&amp;quot;);
  });&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Gelen “/ac” isteğine karşılık ledi açık konuma getirir ve istemciye “ac sinyali gonderildi.” mesajını iletir.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;server.on(&amp;quot;/kapat&amp;quot;, HTTP_GET, [] (AsyncWebServerRequest *request) {
    digitalWrite(output, LOW);
    request-&amp;gt;send(200, &amp;quot;text/plain&amp;quot;, &amp;quot;kapat sinyali gönderildi.&amp;quot;);
  });&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Gelen “/kapat” isteğine karşılık ledi kapalı konuma getirir ve istemciye “kapat sinyali gonderildi.” mesajını iletir.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;server.onNotFound(notFound);
server.begin();&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Bu kod bloğunda sırasıyla:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;span style=&quot;font-size:18px&quot;&gt;Eğer sayfa bulunamadıysa onNotFound metodu çalıştırılacak.
&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;font-size:18px&quot;&gt;begin metodu web serverı başlatır.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;#include &amp;lt;WiFi.h&amp;gt;
#include &amp;lt;AsyncTCP.h&amp;gt;
#include &amp;lt;ESPAsyncWebServer.h&amp;gt;


const char* ssid = &amp;quot;Ag Adi&amp;quot;;
const char* password = &amp;quot;Ag Parolasi&amp;quot;;

const int led = 2;

const char index_html[] PROGMEM = R&amp;quot;rawliteral(&amp;lt;!DOCTYPE Html&amp;gt;

&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt; Web Sayfasi &amp;lt;/title&amp;gt;
    &amp;lt;style&amp;gt;
        body {
            margin: 0;
            text-align: center;
        }
        
        button {
            width: 200px;
            height: 100px;
            border-radius: 3px;
        }
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
    &amp;lt;h2&amp;gt;Esp32 İle Asenkron Web Server&amp;lt;/h2&amp;gt;
    &amp;lt;br&amp;gt;
    &amp;lt;button style=&amp;quot;background-color: #77d772;&amp;quot; id=&amp;quot;ac&amp;quot; onclick=&amp;quot;myfunction(&amp;#39;ac&amp;#39;)&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Aç&amp;lt;/b&amp;gt;&amp;lt;/button&amp;gt;
    &amp;lt;button style=&amp;quot;background-color: red;&amp;quot; id=&amp;quot;kapat&amp;quot; onclick=&amp;quot;myfunction(&amp;#39;kapat&amp;#39;)&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Kapat&amp;lt;/b&amp;gt;&amp;lt;/button&amp;gt;
    &amp;lt;h4&amp;gt;Led Durum:
        &amp;lt;h4 id=&amp;quot;leddurum&amp;quot;&amp;gt;Led Kapalı&amp;lt;/h4&amp;gt;
    &amp;lt;/h4&amp;gt;
    &amp;lt;script&amp;gt;
        function myfunction(value) {
            var xhr = new XMLHttpRequest();
            if (value == &amp;#39;ac&amp;#39;) {
                document.getElementById(&amp;quot;leddurum&amp;quot;).innerHTML = &amp;quot;Led Açık&amp;quot;;
                xhr.open(&amp;quot;GET&amp;quot;, &amp;quot;/ac&amp;quot;, true);
                xhr.send();
            } else {
                document.getElementById(&amp;quot;leddurum&amp;quot;).innerHTML = &amp;quot;Led Kapalı&amp;quot;;
                xhr.open(&amp;quot;GET&amp;quot;, &amp;quot;/kapat&amp;quot;, true);
                xhr.send();
            }
        }
    &amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;

&amp;lt;/Html&amp;gt;)rawliteral&amp;quot;;



void notFound(AsyncWebServerRequest *request) {
  request-&amp;gt;send(404, &amp;quot;text/plain&amp;quot;, &amp;quot;Sayfa Bulunamdadi&amp;quot;);
}

AsyncWebServer server(80);

void setup() {
  Serial.begin(115200);
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  if (WiFi.waitForConnectResult() != WL_CONNECTED) {
    Serial.println(&amp;quot;Wifi agina Baglanmadi!&amp;quot;);
    return;
  }
  Serial.println();
  Serial.print(&amp;quot;ESP IP Address: http://&amp;quot;);
  Serial.println(WiFi.localIP());
  
  pinMode(led, OUTPUT);
  digitalWrite(led, LOW);
  
  server.on(&amp;quot;/&amp;quot;, HTTP_GET, [](AsyncWebServerRequest *request){
    request-&amp;gt;send_P(200, &amp;quot;text/html&amp;quot;, index_html);
  });

  
  server.on(&amp;quot;/ac&amp;quot;, HTTP_GET, [] (AsyncWebServerRequest *request) {
    digitalWrite(output, HIGH);
    request-&amp;gt;send(200, &amp;quot;text/plain&amp;quot;, &amp;quot;ac sinyali gonderildi.&amp;quot;);
  });

  
  server.on(&amp;quot;/kapat&amp;quot;, HTTP_GET, [] (AsyncWebServerRequest *request) {
    digitalWrite(output, LOW);
    request-&amp;gt;send(200, &amp;quot;text/plain&amp;quot;, &amp;quot;kapat sinyali gönderildi.&amp;quot;);
  });
  
  server.onNotFound(notFound);
  server.begin();
}

void loop() {
 
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</content>
 </entry>
 
 <entry>
   <title>NodeMCU Ve Nokia 5110 Ekranı İle Covid-19 Monitörü Projesi</title>
   <link href="http://localhost:4000/2020/05/19/nodemcu-esp8266-ve-nokia-5110-i%CC%87le-covid19-m%C3%B6nit%C3%B6r%C3%BC-yap%C4%B1m%C4%B1"/>
   <updated>2020-05-19T23:15:02+03:00</updated>
   <id>http://localhost:4000/2020/05/19/nodeMCU(ESP8266)-Ve-Nokia-5110-İle-Covid19-Mönitörü-Yapımı</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?id=1ws7zkULNMkbVfTmeUVNx6AGVo1Wct5z7&quot; alt=&quot;Tittle-Photo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Bu projede 1.6” Nokia 5110 ekranı ile nodeMCU kartını kullanarak anlık ülkemizdeki corona virüs istatiklerini gösterebileceğimiz bir monitör yaptım. Anlık olarak ekran üzerinde; toplam vaka sayısı, vefat eden kişi ve iyileşen hasta sayılarını vermektedir.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Projeye başlamadan önce proje içerisinde veri transferi yapmamıza yarayacak ThingSpeak sitesinden biraz bahsetmek istiyorum. &lt;a href=&quot;https://thingspeak.com/&quot;&gt;ThingSpeak&lt;/a&gt; ücretsiz olarak hem arduino sensörleri ile okuduğunuz değerleri yazmaya, hem de yazdığınız değerleri telefonunuzda, bilgisayarınızda veya diğer akıllı cihazlarınızda anlık görebilmenize ve okuyabilmenize imkan tanıyan bir platform. API için kanal oluşturuyorsunuz ve sadece sizin bildiğiniz şifreler ile (API key) verilerinizi grafik üzerinde takip edebiliyorsunuz.Sadece veri gönderip okumaktan farklı olarak internetteki bir veriyi API ile IOT cihazlarınıza gönderebilirsiniz. Bizim bu projede yaptığımız da tam olarak bu.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;malzeme-listesi&quot;&gt;Malzeme Listesi&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;span style=&quot;font-size:18px&quot;&gt;NodeMCU(ESP8266) Kartı&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;font-size:18px&quot;&gt;Nokia 5110 ekranı&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;covid-19-verilerini-çekme&quot;&gt;COVID-19 Verilerini Çekme&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Worldometer sitesinden COVID-19 verisini çekeceğimiz ülkenin sayfasına gitmemiz gerekiyor. Bunun için &lt;a href=&quot;https://www.worldometers.info/coronavirus/&quot;&gt;Worldometer&lt;/a&gt; sitesine gidiyoruz.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?id=1guj430F_Nb7h785DPZEanxTvHflQ-eBT&quot; alt=&quot;Worldometer&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Siteye girdikten sonra sitenin alt kısmında bulunan tabloda verisini çekmek istediğimiz ülkenin linkine tıklyoruz.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p class=&quot;img-responsive&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?id=19K-hrviACswPIWBRbzcdphvZafJpXjUm&quot; alt=&quot;Worldometer&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Karşımıza gelen sayfada klavyenizden “F12” tuşuna basarak veya mouse’nuzla sağ tık atıp inceleye basarak sayfa kaynağının görüntülendiği ekranı açıyoruz.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p class=&quot;img-responsive&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?id=1Pmy21HS2mZHAZDgyAM_6LGFBoe1u6UJS&quot; alt=&quot;Worldometer&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Bu kısımda mavi alan içerisinde gösterilen kısma geliyoruz ve mouse ile sağ tık atıp /Copy/Copy XPath seçeneğine tıklıyoruz. Bu kopyalanan veriyi ThinkSpeak ekranında kullanacağız.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;thingspeak-ayarları&quot;&gt;ThingSpeak Ayarları&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?id=1G85QbMpMbS_mFTT3uoJ336xzuQDUBquY&quot; alt=&quot;Worldometer&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Projenin başında bahsettiğim gibi projemizde veri transferini sağlayacak olan ThingSpeak sitesine kayıt olmamız gerekiyor. Eğer kayıt olduysanız site anasayfasında üstte bulunan Apps butonuna gelin ve altta çıkan seçeneklerden ThingHTTP’ye tıklayın.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?id=1t6lvGaHPbXU-ZXO5avTyAZ1dD1Eb3-et&quot; alt=&quot;Worldometer&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;ThingHTTP’ye tıkladıktan sonra karşımıza çıkan sayfada NewThingHTTP butonuna basıyoruz.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://drive.google.com/uc?id=19k5UP3FxbW2rNiuGdEFC5_oK6VMDhKfx&quot; alt=&quot;Worldometer&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Karşımıza gelen ekranda Name yazan kısma istediğinizi yazabilirsiniz. Ben Türkiye’deki COVID-19 verilerini çekmek istediğim için “Turkey” yazdım. Parse String kısmına kopyaladığımız XPath’i yapıştırıyoruz ve “Save ThingHTTP” butonuna basıyoruz.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p class=&quot;img-responsive&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?id=1y4hhlLZ0EvMTGCDuykayWZeYk9kji3ZU&quot; alt=&quot;image-title-here&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Kırmızı dikdörtgen ile işaretlenmiş alan içerisindeki API’yı kopyalıyoruz.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p class=&quot;img-responsive&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?id=1LKcq7rvfNLO-5H7JSJg6qAzP8AE6msZ4&quot; alt=&quot;image-title-here&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Kopyaladığımız API’yı yukarıdaki fotoğraftaki kırmızı alan içerisindeki api_key kısmına yapıştırıyoruz. Bu arada ağ adı ve ağ parolası yazan kısma bulunduğunuz ortamdaki wifi ağının adını ve parolasını girmeyi unutmayınız.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;proje-kaynak-kodu&quot;&gt;Proje Kaynak Kodu&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;#include &amp;lt;graphicsLCD.h&amp;gt;
#include &amp;lt;ESP8266WiFi.h&amp;gt;                                                  
#include &amp;lt;ESP8266HTTPClient.h&amp;gt;
                                                                       
const char* ssid = &amp;quot;AğAdı&amp;quot;;                                        
const char* password =  &amp;quot;AğParolası&amp;quot;; 
const char* host = &amp;quot;api.thingspeak.com&amp;quot;;                                     
const int httpPortRead = 80;                                           

#define lcd_RST_pin D8
#define lcd_CS_pin D7
#define lcd_DIN_pin D5
#define lcd_CLK_pin D4

graphicsLCD lcd(lcd_RST_pin,lcd_CS_pin,lcd_DIN_pin,lcd_CLK_pin);

const char* url1 = &amp;quot;/apps/thinghttp/send_request?api_key=Api key yapıştıracağınız kısım&amp;quot;;
 
String toplam_vaka,vefat_eden,iyilesen,Data_Raw,Data_Raw_1,Data_Raw_2,Data_Raw_3;  
int indx;
WiFiClient client;                                                        
HTTPClient http; 


String _parse(String value)
{
  String kelime ;
  for(int i=0; i &amp;lt; value.length();i++)
  {
    if(value.substring(i,i+1) != &amp;quot;,&amp;quot;)
      kelime += value.substring(i,i+1);  
  }
  return kelime;
}

void setup() {
  Serial.begin(9600);
  lcd.begin();  
  lcd.clear();                                                         
  WiFi.disconnect();                                                
  delay(1000);                                                           
  WiFi.begin(ssid, password);                                               
  Serial.println(&amp;quot;Wifi agina baglandı.&amp;quot;);                                       
  Serial.println(WiFi.localIP());
}  

 void loop()                                                                      
{
    if( http.begin(host,httpPortRead,url1))                                              
      {
        int httpCode = http.GET();                                                                  
        if (httpCode &amp;gt; 0)                                                              
        {
          if (httpCode == HTTP_CODE_OK || httpCode == HTTP_CODE_MOVED_PERMANENTLY) 
            {   
              lcd.line(1);
              lcd.column(36);
              lcd.print(&amp;quot;Turkey&amp;quot;);
              Data_Raw = http.getString();  
              
              Data_Raw_1 = Data_Raw;                                  
              indx = Data_Raw_1.indexOf(&amp;quot;&amp;gt;&amp;quot;);                                                      
              Data_Raw_1.remove(0,indx+1);                        
              indx = Data_Raw_1.indexOf(&amp;quot;&amp;lt;&amp;quot;);                                                     
              Data_Raw_1.remove(indx,Data_Raw_1.length());                        
              toplam_vaka=Data_Raw_1;
              toplam_vaka = _parse(toplam_vaka); 
              lcd.line(4);
              lcd.print(&amp;quot;Toplam vaka: &amp;quot;);
              lcd.print(toplam_vaka.toInt()); 
              lcd.print(&amp;quot;k&amp;quot;);


              Data_Raw_2=Data_Raw;
              indx = Data_Raw_2.indexOf(&amp;quot;&amp;lt;span&amp;gt;&amp;quot;);
              Data_Raw_2.remove(0,indx+6);
              Data_Raw_3=Data_Raw_2;
              indx = Data_Raw_2.indexOf(&amp;quot;&amp;lt;/span&amp;gt;&amp;quot;);
              Data_Raw_2.remove(indx,Data_Raw_2.length());
              vefat_eden=Data_Raw_2;
              vefat_eden = _parse(vefat_eden);
              lcd.line(5);
              lcd.print(&amp;quot;Vefat eden: &amp;quot;);
              lcd.print(vefat_eden.toInt());  
  

              indx = Data_Raw_3.indexOf(&amp;quot;&amp;lt;span&amp;gt;&amp;quot;);
              Data_Raw_3.remove(0,indx+6);
              indx = Data_Raw_3.indexOf(&amp;quot;&amp;lt;&amp;quot;);
              Data_Raw_3.remove(indx,Data_Raw_3.length());
              
              iyilesen=Data_Raw_3;
              iyilesen = _parse(iyilesen);
              lcd.line(6);
              lcd.print(&amp;quot;Iyilesen: &amp;quot;);
              lcd.print(iyilesen.toInt());  
                                                                         
            }
        }
        else 
        {
          Serial.printf(&amp;quot;[HTTP] istegi alinamadi, Hata: %s\n&amp;quot;, http.errorToString(httpCode).c_str());
        }
        http.end();                                                                 
      } 
      else 
      {
        Serial.printf(&amp;quot;[HTTP} baglanılamıyor.\n&amp;quot;);
      }
    delay(5000);

    while (WiFi.status() != WL_CONNECTED)                                      
      { 
        WiFi.disconnect();                                                        
        delay(1000);                                                             
        WiFi.begin(ssid, password);                                              
        Serial.println(&amp;quot;Wifi agına tekrar baglaniyor.&amp;quot;);       
        delay(10000);                                                             
      }
} 
String prs(String value)
{
  for(int i=0; value.length();i++)
  {
    Serial.println(value.substring(i,i));
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;fritzing-şeması&quot;&gt;Fritzing Şeması&lt;/h3&gt;

&lt;p class=&quot;img-responsive&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?id=1r8PjmfXzo9z4W8N3CiNr9mqrVJJ05_qO&quot; alt=&quot;image-title-here&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;sonuç&quot;&gt;Sonuç&lt;/h3&gt;

&lt;p class=&quot;img-responsive&quot;&gt;&lt;img src=&quot;https://drive.google.com/uc?id=1pOMffX0ygMv5w6Fm2dVfhKiE38HyHZ32&quot; alt=&quot;image-title-here&quot; /&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Blog Açıldı</title>
   <link href="http://localhost:4000/2020/05/13/blog-a%C3%A7%C4%B1ld%C4%B1"/>
   <updated>2020-05-13T23:15:02+03:00</updated>
   <id>http://localhost:4000/2020/05/13/Blog Açıldı</id>
   <content type="html"></content>
 </entry>
 

</feed>
